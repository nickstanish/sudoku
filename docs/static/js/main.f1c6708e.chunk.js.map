{"version":3,"sources":["components/Cell.js","components/Grid.js","components/CellGroup.js","delete.svg","edit-2.svg","adapters/qqwing-adapter.js","hooks/useAnimationForceUpdate.js","utils/animation.js","Timer.js","Game.js","utils/sudoku.js","utils/array.js","App.js","serviceWorker.js","index.js"],"names":["Cell","props","cellProps","data-selected","selected","data-hint","hint","onClick","onSelect","react_default","a","createElement","Object","assign","className","value","pencils","Array","fill","map","_","index","number","key","has","toString","Grid","classes","push","classNames","join","children","CellGroup","Grid_Grid","group","renderCell","_extends","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","_ref3","x1","y1","x2","y2","_ref4","delete_SvgDelete","_ref","svgRef","width","height","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ref","ForwardRef","forwardRef","__webpack_require__","p","edit_2_extends","edit_2_objectWithoutProperties","edit_2_objectWithoutPropertiesLoose","edit_2_ref2","edit_2_SvgEdit2","edit_2_ForwardRef","QQWing","window","qqwing","buildGame","board","game","setPrintStyle","PrintStyle","ONE_LINE","setRecordHistory","values","split","parseInt","setPuzzle","generatePuzzle","countSolutions","solve","SudokuGame","difficulty","_data","_this","classCallCheck","getOwnPropertyNames","forEach","getDifficultyAsString","initialBoard","getPuzzleString","trim","getSolutionString","from","row","Math","floor","column","mergeObj","toHash","_this2","obj","getCells","nextValue","nextBoard","substring","clone","useAnimationForceUpdate","delay","_useState","useState","setTick","slicedToArray","useEffect","fn","timestamp","Date","keepGoing","id","requestAnimationFrame","loop","now","cancelAnimationFrame","requestInterval","tick","TICK_DELAY","Timer","diffSeconds","stopAt","startAt","minutes","seconds","secondsStr","concat","printTime","Game","possibleConstructorReturn","getPrototypeOf","onKeyDown","event","preventDefault","setState","cursor","state","togglePencilMode","updateValue","clearCursor","sudoku","completedAt","newGame","pencilMode","cell","Cell_Cell","updateCursor","currentValues","currentPencils","Set","delete","add","objectSpread","defineProperty","nextState","updateCell","isSolved","gameBoxes","cells","rows","items","count","bins","slice","segment","x","y","toConsumableArray","groupBoxes","getDifficulty","tabIndex","CellGroup_CellGroup","aria-label","data-active","React","Component","App","src_Game_0","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1c6708e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Cell.css';\n\nexport default function Cell(props) {\n  const cellProps = {\n    'data-selected': props.selected,\n    'data-hint': props.hint,\n    onClick: props.onSelect\n  };\n\n  return (\n    <div className=\"Game__Cell\" {...cellProps}>\n      {props.value}\n      {props.value === '' && props.pencils &&\n        <ul className=\"Game__Cell__Pencils\">\n          {\n            Array(9).fill().map((_, index) => {\n              const number = index + 1;\n              return (\n                <li className=\"Pencils__Pencil\" key={index}>\n                  <span>{props.pencils.has(number.toString()) ? number : null}</span>\n                </li>\n              );\n            })\n          }\n        </ul>\n      }\n    </div>\n  );\n}\n\nCell.propTypes = {\n  selected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  hint: PropTypes.bool,\n  pencils: PropTypes.instanceOf(Set),\n  value: PropTypes.string\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Grid.css';\n\nexport default function Grid(props) {\n  const classes = ['Grid'];\n  if (props.className) {\n    classes.push(props.className);\n  }\n  const classNames = classes.join(' ');\n  return (\n    <div className={classNames}>\n      {props.children}\n    </div>\n  )\n}\n\nGrid.propTypes = {\n  children: PropTypes.node\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CellGroup.css';\nimport Grid from './Grid';\n\nexport default function CellGroup(props) {\n  return (\n    <Grid className=\"CellGroup\">\n      {\n        props.group.map(props.renderCell)\n      }\n    </Grid>\n  )\n}\n\nCellGroup.propTypes = {\n  group: PropTypes.array,\n  renderCell: PropTypes.func\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"line\", {\n  x1: 18,\n  y1: 9,\n  x2: 12,\n  y2: 15\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"line\", {\n  x1: 12,\n  y1: 9,\n  x2: 18,\n  y2: 15\n});\n\nvar SvgDelete = function SvgDelete(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-delete\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDelete, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/delete.7c9993e1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"\n});\n\nvar SvgEdit2 = function SvgEdit2(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-edit-2\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgEdit2, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/edit-2.f256ba95.svg\";\nexport { ForwardRef as ReactComponent };","const QQWing = window.qqwing;\n\nfunction buildGame(board) {\n  const game = new QQWing();\n  game.setPrintStyle(QQWing.PrintStyle.ONE_LINE);\n  game.setRecordHistory(true);\n  if (board) {\n    const values = board.split('').map((value) => {\n      if (value === 0) {\n        return undefined;\n      }\n      return parseInt(value, 10);\n    });\n    game.setPuzzle(values);\n  } else {\n    game.generatePuzzle();\n  }\n  game.countSolutions();\n  game.solve();\n  return game;\n}\n\nexport default class SudokuGame {\n  constructor(difficulty, _data) {\n    if (_data) {\n      Object.getOwnPropertyNames(_data).forEach((key) => {\n        this[key] = _data[key]\n      });\n    } else {\n      const game = buildGame();\n      this.difficulty = game.getDifficultyAsString();\n      this.initialBoard = this.board = game.getPuzzleString().trim();\n    }\n  }\n\n  getDifficulty() {\n    return this.difficulty;\n  }\n\n  solve(board) {\n    const game = buildGame(this.initialBoard);\n    return game.getSolutionString().trim();\n  }\n\n  isSolved() {\n    return this.solve(this.board) === this.board;\n  }\n\n  hasError() {\n    return !this.solve(this.board);\n  }\n\n  getCells() {\n    const initialBoard = Array.from(this.initialBoard);\n    return Array.from(this.board).map((value, index) => {\n      return {\n        hint: initialBoard[index] !== '.',\n        value: value === '.' ? '' : value,\n        row: Math.floor(index / 9.0),\n        column: index % 9,\n        index: index\n      };\n    });\n  }\n\n  clone(mergeObj) {\n    const data = Object.assign({}, this.toHash(), mergeObj);\n    return new SudokuGame(null, data);\n  }\n\n  toHash() {\n    const obj = {};\n    Object.getOwnPropertyNames(this).forEach(key => {\n      obj[key] = this[key];\n    });\n    return obj;\n  }\n\n  updateCell(index, value) {\n    const selectedCell = this.getCells()[index];\n    if (selectedCell.hint) {\n      // invalid move\n      return this;\n    }\n    const nextValue = value === '' ? '.' : value;\n    const nextBoard = this.board.substring(0, index) + nextValue + this.board.substring(index + 1);\n    return this.clone({ board: nextBoard });\n  }\n}","import { useState, useEffect } from 'react';\nimport { requestInterval } from '../utils/animation';\n\nexport default function useAnimationForceUpdate(delay) {\n  const [, setTick] = useState(0);\n  useEffect(() => {\n    return requestInterval(() => {\n      setTick(tick => tick + 1);\n    }, delay);\n  });\n}","export function requestInterval(fn, delay) {\n  let timestamp = new Date();\n  let keepGoing = true;\n  let id = null;\n  const loop = () => {\n    if (!keepGoing) {\n      return;\n    }\n    const now = new Date();\n    if (now - timestamp > delay) {\n      timestamp = now;\n      fn.call();\n    }\n    id = window.requestAnimationFrame(loop);\n  }\n  id = window.requestAnimationFrame(loop);\n  return () => {\n    keepGoing = false;\n    if (id !== null) {\n      window.cancelAnimationFrame(id);\n    }\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useAnimationForceUpdate from './hooks/useAnimationForceUpdate';\nconst TICK_DELAY = 250; // MS delay, only update 4 times a second\n\nfunction printTime(minutes, seconds) {\n  const secondsStr = seconds < 10 ? `0${seconds}` : seconds.toString();\n  return `${minutes}:${secondsStr}`;\n}\n\nexport default function Timer(props) {\n  useAnimationForceUpdate(TICK_DELAY);\n  const stopAt = props.stopAt || new Date();\n  const diffSeconds = (stopAt - props.startAt) / 1000;\n  const minutes = Math.floor(diffSeconds / 60);\n  const seconds = Math.floor(diffSeconds % 60);\n  return (\n    <span>{printTime(minutes, seconds)}</span>\n  );\n}\n\nTimer.propTypes = {\n  startAt: PropTypes.objectOf(Date),\n  stopAt: PropTypes.objectOf(Date)\n};","import React from 'react';\nimport './Game.css';\nimport Cell from './components/Cell';\nimport CellGroup from './components/CellGroup';\nimport Grid from './components/Grid';\nimport { ReactComponent as DeleteIcon } from './delete.svg' ;\nimport { ReactComponent as PencilIcon } from './edit-2.svg';\n// import SudokuGame from './adapters/sudoku-adapter';\nimport SudokuGame from './adapters/qqwing-adapter';\nimport Timer from './Timer';\nimport { groupBoxes } from './utils/sudoku';\n\n\n// function addTouchListener() {\n//   window.addEventListener('touchstart', function onFirstTouch() {\n//     document.body.classList.add('is-touch');\n//     window.removeEventListener('touchstart', onFirstTouch, false);\n//   }, false);\n// }\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sudoku: new SudokuGame(),\n      startAt: new Date(),\n      completedAt: null,\n      cursor: null,\n      pencilMode: false,\n      pencils: {}\n    }\n  }\n\n  onKeyDown = (event) => {\n    event.preventDefault();\n    switch(event.key) {\n      case 'ArrowUp': {\n        this.setState({ cursor: (81 + this.state.cursor - 9) % 81 });\n        break;\n      }\n      case 'ArrowDown': {\n        this.setState({ cursor: (81 + this.state.cursor + 9) % 81 });\n        break;\n      }\n      case 'ArrowLeft': {\n        this.setState({ cursor: (81 + this.state.cursor - 1) % 81 });\n        break;\n      }\n      case 'ArrowRight': {\n        this.setState({ cursor: (81 + this.state.cursor + 1) % 81 });\n        break;\n      }\n      case 'p':\n      case 'P': {\n        this.togglePencilMode();\n        break;\n      }\n      case 'Backspace':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9': {\n        const value = event.key === 'Backspace' ? '' : event.key;\n        this.updateValue(value);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  updateValue(value) {\n    if (this.state.cursor !== null) {\n      if (this.state.pencilMode) {\n        if (value !== '') {\n          const currentValues = this.state.pencils[this.state.cursor];\n          const currentPencils = new Set(currentValues);\n          if (currentPencils.has(value)) {\n            currentPencils.delete(value);\n          } else {\n            currentPencils.add(value);\n          }\n          this.setState({\n            pencils: {\n              ...this.state.pencils,\n              [this.state.cursor]: currentPencils\n            }\n          });\n        }\n      } else {\n        const nextState = {\n          sudoku: this.state.sudoku.updateCell(this.state.cursor, value)\n        };\n\n        if (nextState.sudoku.isSolved()) {\n          nextState.completedAt = new Date();\n        }\n\n        this.setState(nextState)\n      }\n    }\n  }\n\n  updateCursor(cell) {\n    this.setState({\n      cursor: cell.index\n    });\n  }\n\n  clearCursor = () => {\n    this.setState({\n      cursor: null\n    });\n  }\n\n  solve = () => {\n    this.setState({\n      sudoku: this.state.sudoku.clone({ board: this.state.sudoku.solve() }),\n      completedAt: new Date()\n    });\n  }\n\n  newGame = () => {\n    this.setState({\n      sudoku: new SudokuGame(),\n      startAt: new Date(),\n      completedAt: null,\n      cursor: null,\n      pencils: {}\n    });\n  }\n\n  togglePencilMode = () => {\n    this.setState({ pencilMode: !this.state.pencilMode });\n  }\n\n  renderCell = (cell) => {\n    return (\n      <Cell\n        key={cell.index}\n        selected={this.state.cursor === cell.index}\n        onSelect={() => this.updateCursor(cell)}\n        hint={cell.hint}\n        pencils={this.state.pencils[cell.index]}\n        value={cell.value}\n      />\n    );\n  }\n\n  render() {\n    const gameBoxes = groupBoxes(this.state.sudoku.getCells());\n    return (\n      <div>\n        <header className=\"Game__Header\">\n          <div>\n            { this.state.sudoku.getDifficulty() }\n          </div>\n          <div>\n            <Timer startAt={this.state.startAt} stopAt={this.state.completedAt} />\n          </div>\n        </header>\n        <div className=\"Game\" tabIndex=\"0\" onKeyDown={this.onKeyDown}>\n          <div className=\"Game__Table\">\n            <Grid className=\"BoardGrid\">\n              {\n                gameBoxes.map((group, index) => <CellGroup key={index} group={group} renderCell={this.renderCell} />)\n              }\n            </Grid>\n          </div>\n        </div>\n        {this.state.completedAt !== null &&\n          <h2>Complete!</h2>\n        }\n        <div className=\"Game__Numpad\">\n          <div className=\"Game__NumButtonContainer\">\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('1')}>1</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('2')}>2</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('3')}>3</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('4')}>4</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('5')}>5</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('6')}>6</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('7')}>7</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('8')}>8</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('9')}>9</button>\n            <div className=\"Game__NumButton\"></div>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('')}><span><DeleteIcon aria-label=\"Delete\" /></span></button>\n            <button className=\"Game__NumButton\" data-active={this.state.pencilMode} onClick={this.togglePencilMode} ><span><PencilIcon aria-label=\"Pencil\" /></span></button>\n          </div>\n        </div>\n        <div className=\"Game__ButtonBar\">\n          <button onClick={this.solve}>Solve</button>\n          <button onClick={this.newGame}>New Game</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import { segment } from './array';\n\nexport function groupBoxes(cells) {\n  const rows = segment(cells, 9);\n  return Array(9).fill().map((_, index) => {\n    const x = Math.floor(index / 3) * 3;\n    const y = index % 3;\n    return [\n      ...rows[x].slice(y * 3, (y + 1) * 3),\n      ...rows[x + 1].slice(y * 3, (y + 1) * 3),\n      ...rows[x + 2].slice(y * 3, (y + 1) * 3)\n    ]\n  });\n}","export function segment(items, count) {\n  const bins = [];\n  for (let i = 0; i < count; i++) {\n    bins.push(items.slice(i * count, (i + 1) * count));\n  }\n  return bins;\n}","import React from 'react';\nimport './App.css';\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}