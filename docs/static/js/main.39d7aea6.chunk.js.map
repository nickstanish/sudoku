{"version":3,"sources":["delete.svg","adapters/qqwing-adapter.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","react_default","a","createElement","d","_ref3","x1","y1","x2","y2","_ref4","delete_SvgDelete","_ref","svgRef","props","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","ref","ForwardRef","forwardRef","QQWing","__webpack_require__","p","window","qqwing","buildGame","board","game","setPrintStyle","PrintStyle","ONE_LINE","setRecordHistory","values","split","map","value","parseInt","setPuzzle","generatePuzzle","countSolutions","solve","SudokuGame","difficulty","_data","_this","classCallCheck","getOwnPropertyNames","forEach","getDifficultyAsString","initialBoard","getPuzzleString","trim","getSolutionString","Array","from","index","hint","row","Math","floor","column","mergeObj","toHash","_this2","obj","getCells","nextValue","nextBoard","substring","clone","Game","possibleConstructorReturn","getPrototypeOf","onKeyDown","event","preventDefault","setState","cursor","state","updateValue","clearCursor","sudoku","newGame","updateCell","cell","gameRows","cells","rows","push","slice","cellsToRows","tabIndex","cellProps","data-selected","onClick","updateCursor","data-hint","isSolved","getDifficulty","React","Component","App","src_Game_0","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39d7aea6.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"line\", {\n  x1: 18,\n  y1: 9,\n  x2: 12,\n  y2: 15\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"line\", {\n  x1: 12,\n  y1: 9,\n  x2: 18,\n  y2: 15\n});\n\nvar SvgDelete = function SvgDelete(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-delete\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDelete, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/delete.7c9993e1.svg\";\nexport { ForwardRef as ReactComponent };","const QQWing = window.qqwing;\n\nfunction buildGame(board) {\n  const game = new QQWing();\n  game.setPrintStyle(QQWing.PrintStyle.ONE_LINE);\n  game.setRecordHistory(true);\n  if (board) {\n    const values = board.split('').map((value) => {\n      if (value === 0) {\n        return undefined;\n      }\n      return parseInt(value, 10);\n    });\n    game.setPuzzle(values);\n  } else {\n    game.generatePuzzle();\n  }\n  game.countSolutions();\n  game.solve();\n  return game;\n}\n\nexport default class SudokuGame {\n  constructor(difficulty, _data) {\n    if (_data) {\n      Object.getOwnPropertyNames(_data).forEach((key) => {\n        this[key] = _data[key]\n      });\n    } else {\n      const game = buildGame();\n      this.difficulty = game.getDifficultyAsString();\n      this.initialBoard = this.board = game.getPuzzleString().trim();\n    }\n  }\n\n  getDifficulty() {\n    return this.difficulty;\n  }\n\n  solve(board) {\n    const game = buildGame(this.initialBoard);\n    return game.getSolutionString().trim();\n  }\n\n  isSolved() {\n    return this.solve(this.board) === this.board;\n  }\n\n  hasError() {\n    return !this.solve(this.board);\n  }\n\n  getCells() {\n    const initialBoard = Array.from(this.initialBoard);\n    return Array.from(this.board).map((value, index) => {\n      return {\n        hint: initialBoard[index] !== '.',\n        value: value === '.' ? '' : value,\n        row: Math.floor(index / 9.0),\n        column: index % 9,\n        index: index\n      };\n    });\n  }\n\n  clone(mergeObj) {\n    const data = Object.assign({}, this.toHash(), mergeObj);\n    return new SudokuGame(null, data);\n  }\n\n  toHash() {\n    const obj = {};\n    Object.getOwnPropertyNames(this).forEach(key => {\n      obj[key] = this[key];\n    });\n    return obj;\n  }\n\n  updateCell(index, value) {\n    const selectedCell = this.getCells()[index];\n    if (selectedCell.hint) {\n      // invalid move\n      return this;\n    }\n    const nextValue = value === '' ? '.' : value;\n    const nextBoard = this.board.substring(0, index) + nextValue + this.board.substring(index + 1);\n    return this.clone({ board: nextBoard });\n  }\n}","import React from 'react';\nimport './Game.css';\nimport { ReactComponent as DeleteIcon } from './delete.svg' ;\n// import SudokuGame from './adapters/sudoku-adapter';\nimport SudokuGame from './adapters/qqwing-adapter';\n\n\n// function addTouchListener() {\n//   window.addEventListener('touchstart', function onFirstTouch() {\n//     document.body.classList.add('is-touch');\n//     window.removeEventListener('touchstart', onFirstTouch, false);\n//   }, false);\n// }\n\nfunction cellsToRows(cells) {\n  const rows = [];\n  for (let i = 0; i < 9; i++) {\n    rows.push(cells.slice(i * 9, (i + 1) * 9));\n  }\n  return rows;\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sudoku: new SudokuGame(),\n      cursor: null\n    }\n  }\n\n  onKeyDown = (event) => {\n    event.preventDefault();\n    switch(event.key) {\n      case 'ArrowUp': {\n        this.setState({ cursor: (81 + this.state.cursor - 9) % 81 });\n        break;\n      }\n      case 'ArrowDown': {\n        this.setState({ cursor: (81 + this.state.cursor + 9) % 81 });\n        break;\n      }\n      case 'ArrowLeft': {\n        this.setState({ cursor: (81 + this.state.cursor - 1) % 81 });\n        break;\n      }\n      case 'ArrowRight': {\n        this.setState({ cursor: (81 + this.state.cursor + 1) % 81 });\n        break;\n      }\n      case 'Backspace':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9': {\n        const value = event.key === 'Backspace' ? '' : event.key;\n        this.updateValue(value);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  updateValue(value) {\n    if (this.state.cursor !== null) {\n      this.setState({ sudoku: this.state.sudoku.updateCell(this.state.cursor, value) })\n    }\n  }\n\n  updateCursor(cell) {\n    this.setState({\n      cursor: cell.index\n    });\n  }\n\n  clearCursor = () => {\n    this.setState({\n      cursor: null\n    });\n  }\n\n  solve = () => {\n    this.setState({ sudoku: this.state.sudoku.clone({ board: this.state.sudoku.solve() }) })\n  }\n\n  newGame = () => {\n    this.setState({\n      sudoku: new SudokuGame(),\n      cursor: null\n    });\n  }\n\n  render() {\n    const gameRows = cellsToRows(this.state.sudoku.getCells());\n    return (\n      <div>\n        <div className=\"Game\" tabIndex=\"0\" onKeyDown={this.onKeyDown}>\n          <table className=\"Game__Table\">\n            <tbody>\n              { \n                gameRows.map((row, index) => {\n                  return (\n                    <tr key={index} className=\"Game__TableRow\">\n                      { \n                        row.map((cell) => {\n                          const cellProps = {\n                            'data-selected': this.state.cursor === cell.index, \n                            onClick: () => this.updateCursor(cell)\n                          };\n\n                          return (\n                            <td className=\"Game__Cell\" key={cell.index} data-hint={cell.hint} {...cellProps}>\n                              {cell.value}\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n        {this.state.sudoku.isSolved() &&\n          <h2>Complete!</h2>\n        }\n        <div className=\"Game__Numpad\">\n          <div className=\"Game__NumButtonContainer\">\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('1')}>1</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('2')}>2</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('3')}>3</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('4')}>4</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('5')}>5</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('6')}>6</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('7')}>7</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('8')}>8</button>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('9')}>9</button>\n            <div className=\"Game__NumButton\"></div>\n            <button className=\"Game__NumButton\" onClick={() => this.updateValue('')}><span><DeleteIcon /></span></button>\n            <div className=\"Game__NumButton\"></div>\n          </div>\n        </div>\n        <div className=\"Game__BottomBar\">\n          <p>\n            <strong>Difficulty: </strong>\n            { this.state.sudoku.getDifficulty() }\n          </p>\n          \n        </div>\n        <div className=\"Game__ButtonBar\">\n          <button onClick={this.solve}>Solve</button>\n          <button onClick={this.newGame}>New Game</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}